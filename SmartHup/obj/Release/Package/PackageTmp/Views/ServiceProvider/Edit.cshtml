@model SmartHup.Models.ServiceProvider

@{
    ViewBag.title = "Edit";
}



    @using (Html.BeginForm())
    {
    @Html.AntiForgeryToken()

@Html.HiddenFor(model => model.createdBy)
        @Html.HiddenFor(model => model.creationDate)
        @Html.HiddenFor(model => model.modifiedBy)
        @Html.HiddenFor(model => model.modificationDate)
        @Html.HiddenFor(model => model.deletedBy)
        @Html.HiddenFor(model => model.deletedBy)
    @Html.HiddenFor(model => model.version, new { htmlAttributes = new { @class = "form-control" } })

    <div class="form-horizontal">
        <h4>Edit Service Provider - Service Provider Management</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.systemId)

        <div class="form-group">
            @Html.LabelFor(model => model.serviceProviderId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.serviceProviderId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.serviceProviderId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serviceProviderName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.serviceProviderName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.serviceProviderName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serviceProviderEName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.serviceProviderEName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.serviceProviderEName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serviceProviderLabel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.serviceProviderLabel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.serviceProviderLabel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serviceProviderELabel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.serviceProviderELabel, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.serviceProviderELabel, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serviceProviderStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.serviceProviderStatus, ViewBag.Status as SelectList, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.serviceProviderStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serviceProviderTypeId, "serviceProviderTypeId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("serviceProviderTypeId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.serviceProviderTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("status", null,  new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
     
            <a href="@Url.Action("Index")" class="btn btn-default">Back to List</a>

            </div>
        </div>
    </div>
    }


