@model IEnumerable<SmartHup.Models.ServiceHandler>
@{

    Dictionary<Tuple<string, string>, bool> menu = ViewBag.menu;
    if (menu == null)
    {
        menu = new Dictionary<Tuple<string, string>, bool>();
    }


    Dictionary<int, string> status = ViewBag.statusDictionary;
    if (status == null)
    {
        status = new Dictionary<int, string>();
    }
}

@{
    ViewBag.title = "Index";
}
<h2 class="page-title">Service Handler Management</h2>
<p>
    @Html.ActionLink("Create New", "Create", null, new { @class = "btn btn-success" })
</p>


<div class="box box-danger">
    <div class="box-header">
    </div>
    <div class="box-body">
        <table class="table table-striped table-bordered table-hover order-column datatable" >
            <thead>
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.Service.ServiceProvider)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Service)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.serviceHanlerId)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.serviceHanlerName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.status)
                    </th>
                    <th>   Actions</th>
                </tr>
            <thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.Service.ServiceProvider.serviceProviderName)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Service.serviceId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.serviceHanlerId)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.serviceHanlerName)
                        </td>
                        <td>
                            @item.EntityStatus.EntityStatusName
                        </td>
                        <td>
                            <div class="btn-group">
                                <button class="btn btn-xs green dropdown-toggle" type="button" data-toggle="dropdown" aria-expanded="false">
                                    Actions
                                    <i class="fa fa-angle-down"></i>
                                </button>
                                <ul class="dropdown-menu" role="menu">
                                    @*@Html.ActionLink("Edit", "Edit", new { id = item.systemId }, new { @class = "fa fa-edit" })*@
                                
@if (menu.ContainsKey(Tuple.Create("ServiceHandlers", "ServiceFields")))
{
    <li>
        <a href="@Url.Action("ServiceFields", "ServiceHandlers", new { id = item.systemId })"><i class="fa fa-tasks"><span class="DelTex">ServiceFields</span></i></a>
    </li>
    
}

                                    @if (menu.ContainsKey(Tuple.Create("ServiceHandlers", "Edit")))
                                    {
                                        <li>
                                            <a href="@Url.Action("Edit", "ServiceHandlers", new { id = item.systemId })"><i class="fa fa-edit"><span class="DelTex">Edit</span></i></a>
                                            </li>
                                            }
                                            @if (menu.ContainsKey(Tuple.Create("ServiceHandlers", "Details")))
                                            {
                                                <li>
                                                    <a href="@Url.Action("Details", "ServiceHandlers", new { id = item.systemId })"><i class="fa fa-eye"><span class="DelTex">Details</span></i></a>
                                                    </li>
                                                    }
                                                    @*@if (menu.ContainsKey(Tuple.Create("ServiceHandlers", "Delete")))
                                                        {
                                                            @Html.ActionLink("Delete", "Delete", new { id = item.systemId }, new { @class = "fa fa-remove" })
                                                        }*@
</ul></div>        </td>
                    </tr>
                }
            </tbody>
            <tfoot>

            </tfoot>
        </table>
    </div>
</div>


