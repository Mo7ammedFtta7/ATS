@model SmartHup.Models.MultiValueList

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       
                @Html.HiddenFor(model => model.systemId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.createdBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.modifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.creationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.modificationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.version, new { htmlAttributes = new { @class = "form-control" } })

                @Html.HiddenFor(model => model.systemId)

                <div class="form-group hide">
                    @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group hide">
                    @Html.LabelFor(model => model.creationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.creationDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.creationDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group hide">
                    @Html.LabelFor(model => model.modificationDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.modificationDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.modificationDate, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group  hide">
                    @Html.LabelFor(model => model.modifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.modifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.modifiedBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group hide">
                    @Html.LabelFor(model => model.createdBy, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.createdBy, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.createdBy, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group hide">
                    @Html.LabelFor(model => model.version, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.version, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.version, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                  multivalueId
                    <div class="">
                        @Html.EditorFor(model => model.multivalueId, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                        @Html.ValidationMessageFor(model => model.multivalueId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                multivalueName
                    <div class="">
                        @Html.EditorFor(model => model.multivalueName, new { htmlAttributes = new { @class = "form-control", @required = "" } })
                        @Html.ValidationMessageFor(model => model.multivalueName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                  multivalueEName
                    <div class="">
                        @Html.EditorFor(model => model.multivalueEName, new { htmlAttributes = new { @class = "form-control", @required="" } })
                        @Html.ValidationMessageFor(model => model.multivalueEName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group hide">
                   paymentFieldId
                    <div class="">
                        @Html.EditorFor(model => model.paymentFieldId, new { htmlAttributes = new { @class = "form-control" } })


                        @Html.ValidationMessageFor(model => model.paymentFieldId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group hide">
                    @Html.LabelFor(model => model.serviceFieldId, "serviceFieldId", htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownList("serviceFieldId", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.serviceFieldId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="">
                        <input type="submit" value="Save" class="btn btn-primary" />
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>                    </div>
                </div>

    }
         




