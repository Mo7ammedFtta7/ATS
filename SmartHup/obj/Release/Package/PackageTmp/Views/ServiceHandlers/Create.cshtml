@model SmartHup.Models.ServiceHandler
@{
    ViewBag.Title = "ServiceHandler";
}

@using (Html.BeginForm(new { @class = "form-horizontal" })) 
{
    @Html.AntiForgeryToken()

    <div class="box box-danger">
        <div class="box-header ">
            <h4>Create ServiceHandler </h4>
            <hr />
        </div>
        <div class="box-body">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })


            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <label>serviceHanler Id</label>
                        <div class="">
                            @Html.EditorFor(model => model.serviceHanlerId, new { htmlAttributes = new { @class = "form-control ", @Required = "" } })
                            @Html.ValidationMessageFor(model => model.serviceHanlerId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label>
                            serviceHanler Name
                        </label>
                        <div class="">
                            @Html.EditorFor(model => model.serviceHanlerName, new { htmlAttributes = new { @class = "form-control ", @Required = "" } })
                            @Html.ValidationMessageFor(model => model.serviceHanlerName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label>
                            service Id
                        </label>
                        <div class="">
                            @Html.DropDownList("serviceId", null, htmlAttributes: new { @class = "form-control select2", @Required = "" })
                            @Html.ValidationMessageFor(model => model.serviceId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label>
                            serviceHost Uri
                        </label>
                        <div class="">
                            @Html.EditorFor(model => model.serviceHostUri, new { htmlAttributes = new { @class = "form-control", @Required = "" } })
                            @Html.ValidationMessageFor(model => model.serviceHostUri, "", new { @class = "text-danger" })
                        </div>
                    </div>


                </div>
                <div class="col-md-4">

                    <div class="form-group">
                        <label>
                            serviceHost IntegrationType
                        </label>
                        <div class="">
                            @Html.EditorFor(model => model.serviceHostIntegrationType, new { htmlAttributes = new { @class = "form-control", @Required = "" } })
                            @Html.ValidationMessageFor(model => model.serviceHostIntegrationType, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label>
                            serviceHost CharSet
                        </label>
                        <div class="">
                            @Html.EditorFor(model => model.serviceHostCharSet, new { htmlAttributes = new { @class = "form-control", @Required = "" } })
                            @Html.ValidationMessageFor(model => model.serviceHostCharSet, "", new { @class = "text-danger" })
                        </div>
                    </div>



                    <div class="form-group">
                        <label>
                            serviceHost PublicKey
                        </label>
                        <div class="">
                            @Html.EditorFor(model => model.serviceHostPublicKey, new { htmlAttributes = new { @class = "form-control", @Required = "" } })
                            @Html.ValidationMessageFor(model => model.serviceHostPublicKey, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group">
                        <label>
                            serviceHost AcceptEncoding
                        </label>
                        <div class="">
                            @Html.EditorFor(model => model.serviceHostAcceptEncoding, new { htmlAttributes = new { @class = "form-control", @Required = "" } })
                            @Html.ValidationMessageFor(model => model.serviceHostAcceptEncoding, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">


                    <div class="form-group">
                        <label>
                            serviceHos tContentType
                        </label>
                        <div class="">
                            @Html.EditorFor(model => model.serviceHostContentType, new { htmlAttributes = new { @class = "form-control", @Required = "" } })
                            @Html.ValidationMessageFor(model => model.serviceHostContentType, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        <label>
                            serviceHanler Status
                        </label>
                        <div class="">
                            @Html.DropDownListFor(model => model.serviceHanlerStatus, ViewBag.Status as SelectList, null, new { @class = "form-control", @Required = "" })
                            @Html.ValidationMessageFor(model => model.serviceHanlerStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label>
                            is Ss lExist
                        </label>
                        <div class="">
                            @Html.EditorFor(model => model.isSslExist, new { htmlAttributes = new { @class = "form-control", @Required = "" } })
                            @Html.ValidationMessageFor(model => model.isSslExist, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>











            </div>
            <div class="form-group">
                <div class="box-footer">
                    <input type="submit" value="Create" class="btn btn-default" />
                    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                </div>
            </div>
        </div>
    </div>
}

