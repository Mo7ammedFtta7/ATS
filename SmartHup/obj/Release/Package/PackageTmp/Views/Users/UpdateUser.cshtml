@model SmartHup.Models.RegisterViewModel

@{
    ViewBag.Title = "UpdateUser";
}

<h2>Update User - User Management</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @ViewBag.msg
        @Html.HiddenFor(model => model.systemId)
        @Html.HiddenFor(model => model.version)

        <div class="form-group">
            @Html.LabelFor(model => model.serviceProviderId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("serviceProviderId", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                @Html.HiddenFor(model => model.serviceProviderId)
                @Html.ValidationMessageFor(model => model.serviceProviderId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("RoleId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("status", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                @*@if (TempData["condition"] as string == "1")
                {
                    @Html.DropDownList("condition",
                      new List<SelectListItem>
                      {
                        new SelectListItem{ Text="Active", Value="1"},
                        new SelectListItem{ Text="Locked", Value="0"},
                      }
                      , htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                }
                else
                {
                    @Html.DropDownList("condition",
                  new List<SelectListItem>
                  {
                      new SelectListItem{ Text="Locked", Value="0"},
                      new SelectListItem{ Text="Active", Value="1"},
                  }
                  , htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })

                }*@
            </div>
        </div>


        @*<div class="form-group">
                @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("status", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
                </div>
            </div>*@



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                <a href="@Url.Action("Index")" class="btn btn-default">Back to List</a>
            </div>
        </div>
    </div>
}

<div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
