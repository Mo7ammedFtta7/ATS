@model SmartHup.Models.MultiValueList
@{
    ViewBag.Title = "MultiValueList";
}

@using (Html.BeginForm(new { @class = "form-horizontal" })) 
{
    @Html.AntiForgeryToken()
    
     <div class="box-body">
       <h4>Add MultiValueList - MultiValueList Managment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.systemId, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.systemId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.systemId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.creationDate, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.creationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.creationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modificationDate, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.modificationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modificationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.modifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modifiedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.createdBy, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.createdBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.createdBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.version, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.version, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.version, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.multivalueId, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.multivalueId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.multivalueId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.multivalueName, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.multivalueName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.multivalueName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.multivalueEName, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.multivalueEName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.multivalueEName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.paymentFieldId, "paymentFieldId", htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.DropDownList("paymentFieldId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.paymentFieldId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serviceFieldId, "serviceFieldId", htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.DropDownList("serviceFieldId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.serviceFieldId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="box-footer">
                <input type="submit" value="Create" class="btn btn-default" />
				@Html.ActionLink("Back to List", "Index",null, new {@class= "btn btn-primary" })
            </div>
        </div>
    </div>
}

