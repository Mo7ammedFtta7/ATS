@model  SmartHup.Models.Channel
@{
    ViewBag.Title = "Channel";
}

@using (Html.BeginForm(new { @class = "form-horizontal" })) 
{
    @Html.AntiForgeryToken()
    
     <div class="box-body">
       <h4>Add Channel - Channel Managment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*<div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.DropDownListFor(model => model.status, null, new {  @class = "form-control" })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.channelId, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.channelId, new { htmlAttributes = new { @class = "form-control", @Required = "" } })
                @Html.ValidationMessageFor(model => model.channelId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.channelName, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.channelName, new { htmlAttributes = new { @class = "form-control", @Required = "" } })
                @Html.ValidationMessageFor(model => model.channelName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.channelStatus, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.DropDownListFor(model => model.channelStatus, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.channelStatus, "", new { @class = "text-danger" })

            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.publicKey, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.publicKey, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.publicKey, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="box-footer">
                <input type="submit" value="Create" class="btn btn-default" />
				@Html.ActionLink("Back to List", "Index",null, new {@class= "btn btn-primary" })
            </div>
        </div>
    </div>
}

