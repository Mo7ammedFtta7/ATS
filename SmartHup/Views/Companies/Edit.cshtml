@model SmartHup.Models.Company

@{
    ViewBag.Title = "Edit";
}




@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Edit Company - Companies Managment</h4>

        <hr />
         @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    @Html.HiddenFor(model => model.systemId, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.createdBy, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.modifiedBy, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.deletedBy, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.creationDate, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.modificationDate, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.deletedDate, new { htmlAttributes = new { @class = "form-control" } })
    @Html.HiddenFor(model => model.version, new { htmlAttributes = new { @class = "form-control" } })

        @Html.HiddenFor(model => model.systemId)

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CompanyArName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CompanyArName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyArName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, 2, 20, htmlAttributes: new { style = "width: 100%; max-width: 100%;" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SLAId, "SLA Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("SLAId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SLAId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="hidden">
            @Html.LabelFor(model => model.createdBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.createdBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.createdBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="hidden">
            @Html.LabelFor(model => model.modifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modifiedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="hidden">
            @Html.LabelFor(model => model.creationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.creationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.creationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="hidden">
            @Html.LabelFor(model => model.modificationDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.modificationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modificationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.entityStatus_systemId, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("entityStatus_systemId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.entityStatus_systemId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="hidden">
            @Html.LabelFor(model => model.version, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.version, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.version, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-danger" />
				@Html.ActionLink("Back to List", "Index",null, new {@class= "btn btn-primary" })
            </div>
        </div>
    </div>
}


    



