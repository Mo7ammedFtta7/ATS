@model SmartHup.Models.Company
@{
    ViewBag.title = "Details";

    Dictionary<Tuple<string, string>, bool> menu = ViewBag.menu;
    if (menu == null) { menu = new Dictionary<Tuple<string, string>, bool>(); }

    string create_by = TempData["display_create_by"] != null ? TempData["display_create_by"] as string : "";
    string modify_by = TempData["display_modify_by"] != null ? TempData["display_modify_by"] as string : "";
    string delete_by = TempData["display_delete_by"] != null ? TempData["display_delete_by"] as string : "";
    string status = TempData["display_status"] != null ? TempData["display_status"] as string : "";
}
<div>
    <h4>Company Details - Companies Management</h4>
    <hr />
    <table class="table table-striped">
        <tr>
            <td>
            @Html.DisplayNameFor(model => model.CompanyName)
        </td>
		<td>
            @Html.DisplayFor(model => model.CompanyName)
        </td>
		</tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.CompanyArName)
        </td>
		<td>
            @Html.DisplayFor(model => model.CompanyArName)
        </td>
		</tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.Description)
        </td>
		<td>
            @Html.DisplayFor(model => model.Description)
        </td>
		</tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.Address)
        </td>
		<td>
            @Html.DisplayFor(model => model.Address)
        </td>
		</tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.Phone)
        </td>
		<td>
            @Html.DisplayFor(model => model.Phone)
        </td>
		</tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.Email)
        </td>
		<td>
            @Html.DisplayFor(model => model.Email)
        </td>
		</tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.Note)
        </td>
		<td>
            @Html.DisplayFor(model => model.Note)
        </td>
		</tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.createdBy)
            </td>
            <td>
             @user_info.getusername(Model.createdBy) 
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.creationDate)
            </td>
            <td>
                @Html.DisplayFor(model => model.creationDate)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.modificationDate)
            </td>
            <td>
                @Html.DisplayFor(model => model.modificationDate)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.modifiedBy)
            </td>
            <td>
                @user_info.getusername(Model.modifiedBy)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.EntityStatu.EntityStatusName)
            </td>
            <td>
                @Html.DisplayFor(model => model.EntityStatu.EntityStatusName)
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.SLA.SLA_Name)
            </td>
            <td>
                @Html.DisplayFor(model => model.SLA.SLA_Name)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.version)
            </td>
            <td>
                @Html.DisplayFor(model => model.version)
            </td>
        </tr>
    </table>
</div>
<p>
	@if( menu.ContainsKey(Tuple.Create("Companies","Edit")) ) {
    @Html.ActionLink("Edit", "Edit", new { id = Model.systemId },new{  @class = "btn btn-danger" })  
	}
    @Html.ActionLink("Back to List", "Index",null, new { @class = "btn btn-primary" })
</p>

