@model SmartHup.Models.User
@using SmartHup.Resources
@{
    ViewBag.Title = "UserProfile";
    Dictionary<Tuple<string, string>, bool> menu = ViewBag.menu;
    if (menu == null) { menu = new Dictionary<Tuple<string, string>, bool>(); }

    string createdBy = TempData["display_createdBy"] != null ? TempData["display_createdBy"] as string : "";
    string modifiedBy = TempData["display_modifiedBy"] != null ? TempData["display_modifiedBy"] as string : "";
    string deletedBy = TempData["display_deletedBy"] != null ? TempData["display_deletedBy"] as string : "";
}


<div>
    <h4>User Profile - User Management</h4>
    <hr />
    <table class="table table-striped">

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.Role)
            <td>
            <td>


                @Html.DisplayFor(model => model.Role.Name)
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.ServiceProvider)
            <td>
            <td>


                @Html.DisplayFor(model => model.ServiceProvider.serviceProviderName)
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.createdBy)
            <td>
            <td>


                @createdBy
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.modifiedBy)
            <td>
            <td>


                @modifiedBy
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.deletedBy)
            <td>
            <td>


                @deletedBy
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.creationDate)
            <td>
            <td>


                @Html.DisplayFor(model => model.creationDate)
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.modificationDate)
            <td>
            <td>


                @Html.DisplayFor(model => model.modificationDate)
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.deletedDate)
            <td>
            <td>


                @Html.DisplayFor(model => model.deletedDate)
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.version)
            <td>
            <td>


                @Html.DisplayFor(model => model.version)
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.status )
            <td>
            <td>


                @Html.DisplayFor(model => model.EntityStatus.EntityStatusName )
            </td>
        </tr>
        <tr>
            <td>
                @Html.DisplayNameFor(model => model.Email)
            <td>
            <td>


                @Html.DisplayFor(model => model.Email)
            </td>
        </tr>

        <tr>
            <td>
                @Html.DisplayNameFor(model => model.PhoneNumber)
            <td>
            <td>


                @Html.DisplayFor(model => model.PhoneNumber)
            </td>
        </tr>


        <tr>
            <td>
                @Html.DisplayNameFor(model => model.LockoutEnabled)
            <td>
            <td>


                @if (Model.LockoutEndDateUtc > DateTime.UtcNow)
            {
                @Labels.Yes
        }
        else
        {
            @Labels.No
    }


        <tr>
            <td>
                @Html.DisplayNameFor(model => model.UserName)
            <td>
            <td>


                @Html.DisplayFor(model => model.UserName)
            </td>
        </tr>
        @*<tr><td>
            @Html.DisplayNameFor(model => model.status)
        <td><td>


            @Html.DisplayFor(model => model.entityStatus.EntityStatusName)
        </td></tr>*@
    </table>
</div>
<p>
    @if (menu.ContainsKey(Tuple.Create("Users", "UpdateUser")))
    {
                @Html.ActionLink("Edit", "UpdateUser", new { id = Model.systemId },new { @class = "btn btn-primary" }) @:|
    }
    @if (menu.ContainsKey(Tuple.Create("Users", "Index")))
    {
        
        <a href="@Url.Action("Index")" class="btn btn-default">Back to List</a>
    }
</p>
