@model SmartHup.Models.Module
@{
    ViewBag.Title = "Module";
}

@using (Html.BeginForm(new { @class = "form-horizontal" })) 
{
    @Html.AntiForgeryToken()
    
     <div class="box-body">
       <h4>Add Module - Module Managment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ename, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.Ename, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Ename, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.parentId, "parentId", htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.DropDownList("parentId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.parentId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.creationDate, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.creationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.creationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modificationDate, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.modificationDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modificationDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.deletedDate, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.deletedDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.deletedDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.status, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.version, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.version, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.version, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.entityStatus_systemId, "entityStatus_systemId", htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.DropDownList("entityStatus_systemId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.entityStatus_systemId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.createdBy, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.createdBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.createdBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.modifiedBy, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.modifiedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.modifiedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.deletedBy, htmlAttributes: new { @class = "control-label col-md-2" })
           <div class="col-sm-10">
                @Html.EditorFor(model => model.deletedBy, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.deletedBy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="box-footer">
                <input type="submit" value="Create" class="btn btn-default" />
				@Html.ActionLink("Back to List", "Index",null, new {@class= "btn btn-primary" })
            </div>
        </div>
    </div>
}

