@model SmartHup.Models.EscalationRule
@{Dictionary<Tuple<string, string>, bool> menu = ViewBag.menu;
    if (menu == null)
    {menu=new Dictionary<Tuple<string, string>, bool>(); }
 }
<h4>Delete Escalation Rule - Escalation Rules Managment</h4>
<h3>Are you sure you want to delete this Escalation?</h3>
<div>
    
    <hr />
     <table class="table table-striped" border="0">
        <tr>
            <td>
            @Html.DisplayNameFor(model => model.EscalationName)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.EscalationName)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.EscalationArName)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.EscalationArName)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.EscalationLevel)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.EscalationLevel)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.creationDate)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.creationDate)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.modificationDate)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.modificationDate)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.createdBy)
            </td>
			
            <td>
                @user_info.getusername(Model.createdBy)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.modifiedBy)
            </td>
			
            <td>
            @user_info.getusername(Model.modifiedBy)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.version)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.version)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.deletedDate)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.deletedDate)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.deletedBy)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.deletedBy)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.Category.CategoryName)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.Category.CategoryName)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.Category1.CategoryName)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.Category1.CategoryName)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.EntityStatu.EntityStatusName)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.EntityStatu.EntityStatusName)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.Priority.PriorityName)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.Priority.PriorityName)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.Priority1.PriorityName)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.Priority1.PriorityName)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.SLA.SLA_Name)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.SLA.SLA_Name)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.Status.StatusName)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.Status.StatusName)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.Status1.StatusName)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.Status1.StatusName)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.Timer.TimerName)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.Timer.TimerName)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.UserGroup.UserGroupName)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.UserGroup.UserGroupName)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.User.UserName)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.User.UserName)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.User1.UserName)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.User1.UserName)
           </td>
        </tr>

        <tr>
            <td>
            @Html.DisplayNameFor(model => model.User2.UserName)
            </td>
			
            <td>
            @Html.DisplayFor(model => model.User2.UserName)
           </td>
        </tr>

    </table>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
		@if( menu.ContainsKey(Tuple.Create("EscalationRules","Delete")) ) {
            <input type="submit" value="Delete" class="btn btn-danger" /> 
			}
            @Html.ActionLink("Back to List", "Index",null, new {@class= "btn btn-primary" })
        </div>
    }
</div>

